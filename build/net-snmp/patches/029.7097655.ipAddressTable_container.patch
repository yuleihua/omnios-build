#
# netsnmp_access_ipaddress_container_load() can return NULL.
# ipaddressTable_container_load() should check for the validity
# of return value before accessing it or else it causes SEGV.
#
# Developed in-house. Bug submitted upstream
# https://sourceforge.net/p/net-snmp/bugs/2589
#
diff -wpruN '--exclude=*.orig' a~/agent/mibgroup/ip-mib/ipAddressTable/ipAddressTable_data_access.c a/agent/mibgroup/ip-mib/ipAddressTable/ipAddressTable_data_access.c
--- a~/agent/mibgroup/ip-mib/ipAddressTable/ipAddressTable_data_access.c	1970-01-01 00:00:00
+++ a/agent/mibgroup/ip-mib/ipAddressTable/ipAddressTable_data_access.c	1970-01-01 00:00:00
@@ -377,6 +377,8 @@ ipAddressTable_container_load(netsnmp_co
      * missing addresses to be deleted. Also, prune interfaces in
      * ipaddress_container, so only the new interfaces remain.
      */
+    if(ipaddress_container != NULL)
+    {
     tmp_ptr[0] = ipaddress_container->next;
     tmp_ptr[1] = NULL; /* list of interfaces to be removed from 'container' */
     tmp_ptr[2] = NULL; /* list of interfaces to be ignored in ipaddress_container */
@@ -429,6 +431,7 @@ ipAddressTable_container_load(netsnmp_co
         }
         CONTAINER_FREE(tmp_container);
     }
+    }
 
     if (NULL != tmp_ptr[2]) {
         /* list of interfaces to be ignored in ipaddress_container - free it */
