From 5773523d624ce718b5f5131ecd01387fff063efd Mon Sep 17 00:00:00 2001
From: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date: Tue, 13 Jul 2010 09:07:18 +0000
Subject: [PATCH] backport: re PR pch/14940 (PCH largefile test fails on
 various platforms)

	Backport from mainline:
	2010-07-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	PR pch/14940
	* config/host-solaris.c (mmap_fixed): New function.
	(sol_gt_pch_get_address): Use it.
	(sol_gt_pch_use_address): Likewise.

From-SVN: r162128

diff -wpruN '--exclude=*.orig' a~/gcc/config/host-solaris.c a/gcc/config/host-solaris.c
--- a~/gcc/config/host-solaris.c	1970-01-01 00:00:00
+++ a/gcc/config/host-solaris.c	1970-01-01 00:00:00
@@ -30,6 +30,41 @@
 #undef HOST_HOOKS_GT_PCH_USE_ADDRESS
 #define HOST_HOOKS_GT_PCH_USE_ADDRESS sol_gt_pch_use_address
 
+/* Before Solaris 11, the mmap ADDR parameter is mostly ignored without
+   MAP_FIXED set.  Before we give up, search the desired address space with
+   mincore to see if the space is really free.  */
+
+static void *
+mmap_fixed (void *addr, size_t len, int prot, int flags, int fd, off_t off)
+{
+  void *base;
+
+  base = mmap ((caddr_t) addr, len, prot, flags, fd, off);
+  
+  if (base != addr)
+    {
+      size_t page_size = getpagesize();
+      char one_byte;
+      size_t i;
+
+      if (base != (void *) MAP_FAILED)
+	munmap ((caddr_t) base, len);
+
+      errno = 0;
+      for (i = 0; i < len; i += page_size)
+	if (mincore ((char *)addr + i, page_size, (char *) &one_byte) == -1
+	    && errno == ENOMEM)
+	  continue; /* The page is not mapped.  */
+	else
+	  break;
+
+      if (i >= len)
+	base = mmap ((caddr_t) addr, len, prot, flags | MAP_FIXED, fd, off);
+    }
+
+  return base;
+}
+
 /* For various ports, try to guess a fixed spot in the vm space
    that's probably free.  Based on McDougall, Mauro, Solaris Internals, 2nd
    ed., p.460-461, fig. 9-3, 9-4, 9-5.  */
@@ -55,8 +90,8 @@ sol_gt_pch_get_address (size_t size, int
 {
   void *addr;
 
-  addr = mmap ((caddr_t) TRY_EMPTY_VM_SPACE, size, PROT_READ | PROT_WRITE,
-	       MAP_PRIVATE, fd, 0);
+  addr = mmap_fixed ((caddr_t) TRY_EMPTY_VM_SPACE, size,
+		     PROT_READ | PROT_WRITE, MAP_PRIVATE, fd, 0);
 
   /* If we failed the map, that means there's *no* free space.  */
   if (addr == (void *) MAP_FAILED)
@@ -81,34 +116,8 @@ sol_gt_pch_use_address (void *base, size
   if (size == 0)
     return -1;
 
-  addr = mmap ((caddr_t) base, size, PROT_READ | PROT_WRITE, MAP_PRIVATE,
-	       fd, offset);
-
-  /* Solaris isn't good about honoring the mmap START parameter
-     without MAP_FIXED set.  Before we give up, search the desired
-     address space with mincore to see if the space is really free.  */
-  if (addr != base)
-    {
-      size_t page_size = getpagesize();
-      char one_byte;
-      size_t i;
-
-      if (addr != (void *) MAP_FAILED)
-	munmap ((caddr_t) addr, size);
-
-      errno = 0;
-      for (i = 0; i < size; i += page_size)
-	if (mincore ((char *)base + i, page_size, (char *) &one_byte) == -1
-	    && errno == ENOMEM)
-	  continue; /* The page is not mapped.  */
-	else
-	  break;
-
-      if (i >= size)
-	addr = mmap ((caddr_t) base, size, 
-		     PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_FIXED,
-		     fd, offset);
-    }
+  addr = mmap_fixed ((caddr_t) base, size,
+		     PROT_READ | PROT_WRITE, MAP_PRIVATE, fd, offset);
 
   return addr == base ? 1 : -1;
 }
